<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[JAMorrow]]></title><description><![CDATA[Obsidian digital garden]]></description><link>https://jamorrow.github.io/</link><image><url>https://jamorrow.github.io/lib/media/favicon.png</url><title>JAMorrow</title><link>https://jamorrow.github.io/</link></image><generator>Webpage HTML Export plugin for Obsidian</generator><lastBuildDate>Wed, 23 Apr 2025 22:48:42 GMT</lastBuildDate><atom:link href="https://jamorrow.github.io/lib/rss.xml" rel="self" type="application/rss+xml"/><pubDate>Wed, 23 Apr 2025 22:48:42 GMT</pubDate><copyright><![CDATA[Jennifer Morrow]]></copyright><ttl>60</ttl><dc:creator>Jennifer Morrow</dc:creator><item><title><![CDATA[Technical Debt and Innovation Backlog]]></title><description><![CDATA[ 
 <br><br>It is almost impossible to get a nebulous amount of time from stakeholders to improve the system.  The fuzzier your tech debt wishlist, the less likely it is approved.  Your chances increase exponentially if you can provide the following:<br>
<br>What the desired change is
<br>What business facing reason supports making the change
<br>What the scope of work is
<br>The first is self explanatory.<br>The business facing reason is a benefit to the business the work has.  All refactors should have something here, or it doesn't make sense to go forward.<br>Good Examples:<br>
<br>"Implementing this refactor will eliminate this class of bugs."

<br>(Bonus points if you can tie it to a production bug!)


<br>"Implementing this innovation effort will reduce PR turnaround by 10 minutes."

<br>Multiply that by the number of contributors and you are looking at a significant time savings.  Time savings are money savings for the business.


<br>Harder to sell examples:<br>
<br>"Implementing this innovation will bring us in line with current industry practices."

<br>This is a bit vague.  Do those practices improve delivery time?  If so say that.


<br>"This code is ugly/inelegant."

<br>It tends to be better to phrase this as "This code is hard to maintain."  This means the same thing to an engineer, but to a product owner 'maintain' implies the time cost of updating the code or fixing bugs associated with it, while ugly implies the dev just doesn't like the code.


<br>The scope of work is ultimately what determines when the business can fit the work in.  If you can limit scope of work to a small, tight area, you can generally make better guarantees that the tech debt work won't be high impact to the rest of the organization.<br>For example: Consider a refactor that targets a single page, vs an upgrade to a core component used by every page.  The single page will tend to be easier to convince the business to refactor, because at worst the risk is that single page is broken.  It's also much quicker for QA to verify a single page is working versus the entire application.<br>Sometimes a refactor is too big of a sell to your stakeholders with not enough up front benefit.  In cases where you really need to get it through, breaking your refactor into smaller parts that you can spread throughout the plan makes it seem smaller and more acceptable to stakeholders.]]></description><link>https://jamorrow.github.io/pages/documentation.html</link><guid isPermaLink="false">pages/Documentation.md</guid><dc:creator><![CDATA[Jennifer Morrow]]></dc:creator><pubDate>Wed, 23 Apr 2025 20:12:22 GMT</pubDate></item><item><title><![CDATA[Generating This Site]]></title><description><![CDATA[ 
 <br>These were my steps for this blog that takes notes from Obsidian and hosts them on Github Pages.<br>Prerequisites:<br>You use <a data-tooltip-position="top" aria-label="https://obsidian.md/" rel="noopener nofollow" class="external-link" href="https://obsidian.md/" target="_blank">Obsidian</a> for your note taking, and you have a Github account.<br><br>Pretty easy, just follow the instructions Github provides at <a rel="noopener nofollow" class="external-link" href="https://docs.github.com/en/pages/quickstart" target="_blank">https://docs.github.com/en/pages/quickstart</a>.<br><br>First off, you need your notes in Obsidian.  I have mine in a file structure in my Obsidian Vault like this:  (I deleted specific notes to make it easier to parse )<br>jenny@godzilla:~/Documents/Cosmos$ tree
[jenny      418]  .
├── [jenny      352]  1. Rough Notes
├── [jenny      252]  2. Source Material
├── [jenny      232]  3. Indexes
├── [jenny       98]  4. Templates
├── [jenny      498]  5. Zettelkasten
├── [jenny      492]  6. Personal
├── [jenny      367]  index.md
├── [jenny      178]  pages
│&nbsp;&nbsp; ├── [jenny     2.3K]  Documentation.md
│&nbsp;&nbsp; ├── [jenny      434]  Generating This Site.md
│&nbsp;&nbsp; ├── [jenny     5.1K]  Software Soft Skills.md
│&nbsp;&nbsp; └── [jenny      246]  Tech Lead Survival Guide.md
├── [jenny        2]  Scratch Pad.md
├── [jenny     1.1K]  Task Overview.md
<br>This allows me to keep my personal notes separate in their own folders, as well as incomplete thoughts, or in progress research.  What is published is clearly laid out in index.md and pages.<br>This is by no means prescriptive, it's just how I like to organize things since the entirity of my vault is not meant to be published.<br><br>A link to KosmosisDire's excellent plugin:<br>
<a rel="noopener nofollow" class="external-link" href="https://github.com/KosmosisDire/obsidian-webpage-export" target="_blank">https://github.com/KosmosisDire/obsidian-webpage-export</a><br><br>You will want a note called index which the plugin will turn into your index.html.  This is the landing page of your site.  Here is mine in source mode:<br><img alt="GeneratingThisSiteScreen1.png" src="https://jamorrow.github.io/pages/generatingthissitescreen1.png"><br><br>Select the upload folder icon added to your command strip, or right click on your note in the folder view.  Either way, you'll get the Export dialog.  Select only the notes you want to publish, and your index.  This is where putting my publishable work in a specific folder pays off, I can just set it to use the pages folder.<br><img alt="GeneratingThisSiteScreen2.png" src="https://jamorrow.github.io/pages/generatingthissitescreen2.png"><br>Note: The plugin doesn't like the default repo name of JAMorrow.github.io (doesn't think it is a folder), so I simply renamed the folder to JAMorrowGithubPages, and then I could export directly to the repository.<br>Note that we choose "Online Web Server" as our export option.  This will produce an optimized for web version of the page.<br><br>And as usual with git, you need to git add -u (or git add *) to get your changed or new files, git commit a nice message, and git push.<br>And that is it!  Github Pages will take it from there to publish your site.]]></description><link>https://jamorrow.github.io/pages/generating-this-site.html</link><guid isPermaLink="false">pages/Generating This Site.md</guid><dc:creator><![CDATA[Jennifer Morrow]]></dc:creator><pubDate>Wed, 23 Apr 2025 22:47:57 GMT</pubDate><enclosure url="https://jamorrow.github.io/pages/generatingthissitescreen1.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://jamorrow.github.io/pages/generatingthissitescreen1.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[What are the Soft Skills?]]></title><description><![CDATA[ 
 <br>Have you ever had a great idea to improve a system by using a better framework and had your ideas shot down?  Have you ever struggled to quantify why you earned that raise at review time?  Have you ever had a bad architectural decision imposed on your project and not been able to convince your team why it is a bad idea?<br>While we all get the short end of the stick sometimes, a lot more of this is in your control than you may realize.  You may be a highly specialized knowledge worker with years of domain experience to back you up, but that alone won't make your viewpoints heard.  Software Soft Skills are all about the unintuitive ways decisions get made in software businesses and how you can best position yourself to be heard.<br><br>
<br><a data-tooltip-position="top" aria-label="Active Listening" data-href="#Active Listening" href="https://jamorrow.github.io/about:blank#Active_Listening" class="internal-link" target="_self" rel="noopener nofollow">Active Listening</a>
<br><a data-tooltip-position="top" aria-label="Collaborative Questions" data-href="#Collaborative Questions" href="https://jamorrow.github.io/about:blank#Collaborative_Questions" class="internal-link" target="_self" rel="noopener nofollow">Collaborative Questions</a>
<br><a data-tooltip-position="top" aria-label="Generating Buy-in" data-href="#Generating Buy-in" href="https://jamorrow.github.io/about:blank#Generating_Buy-in" class="internal-link" target="_self" rel="noopener nofollow">Generating Buy-in</a>
<br><a data-tooltip-position="top" aria-label="Low Stakes Compromises" data-href="#Low Stakes Compromises" href="https://jamorrow.github.io/about:blank#Low_Stakes_Compromises" class="internal-link" target="_self" rel="noopener nofollow">Low Stakes Compromises</a>
<br><a data-tooltip-position="top" aria-label="Identifying Key Decision Makers" data-href="#Identifying Key Decision Makers" href="https://jamorrow.github.io/about:blank#Identifying_Key_Decision_Makers" class="internal-link" target="_self" rel="noopener nofollow">Identifying Key Decision Makers</a>
<br><br>Active listening is being fully engaged while others are talking.  This seems super obvious, but consider how many Zoom calls you've been on while also making a code change, or filling out a time sheet, or answering an urgent Slack message.  In fact, it is harder than ever to be actively engaged, to the point that Zoom is now touting it's AI "catch me up" feature as a meeting bonus.  Our meeting tooling even assumes we aren't paying attention.<br>My personal guideline is as follows: for meetings with my team, I make the effort to pause notifications from everyone but a select list of prioritized people and channels.  This means if I get a notification, it's something actually urgent enough to check during the meeting.  I will always prefer to explicitly post a "BRB" and let people know I need to focus on something outside of the meeting, over leaving myself on camera and 'looking' like I am paying attention while not.<br>The impact of this is when I am in a meeting, team members know I am actively hearing their concerns and evaluating their questions.  Meetings run smoother when folks don't have to pause and reexplain the topic to me because I wasn't listening.<br>This builds trust with the team.  They know that their tech lead will make time for them, and when they have time that their needs will be met (or at least heard).<br><br>Collaborative questions is the skill of leading your question with a statement that affirms their expertise lowers people's defensiveness.<br>
"That's a nifty solution to sorting the account records.  What are your thoughts on handling the duplicate records we inherited?"
<br>This is useful in situations where you aren't sure about a solution a coworker has presented.<br><br>People become more invested in promoting your solution if they have had a say in building it.  It gives them a sense of co-ownership and builds their familiarity with the solution.  That's particularly important if you intend to have the whole team contribute to or build on it.<br>In contrast, people tend to resist frameworks and tools they feel are imposed on them.  A fully built solution can be met with more resistance than a partial implementation with a request for feedback.<br>
"I was thinking about using this framework.  It really simplifies the majority of our api calls.  Here is an example.  The only thing I'm not sure about is how it would impact our integration tests.  Do you have any ideas there?"
<br><br>Compromise is not a dirty word.  It is generally better to get some of your agenda through than to get none.  A compromise where you accept a poor solution in the near term can build you social capital as a team player, which you can then spend on the next interaction to come out ahead.<br>
"We want to implement feature A in a new framework.  The drawbacks are that it will take us more time to implement this feature right now, but it will make features B and C easier and improve maintainability."<br>
"No, we need this fast so do it in the old arch to meet this customer deliverable."<br>
"Okay, we can do that.  Can you pitch a maintenance feature to the customer for us to do after so we can move to the new framework later?"<br>
"Absolutely!"
<br>That's a real conversation, paraphrased, I had.  And we did create and sell the followup maintenance feature.  There are some organizations where the business side may not followup on promises like that, but that is another planned article on Navigating Dysfunction Organizations.  Always assume your org is functional until proven otherwise, though.<br><br>At any organization, someone ends up with the final say.  This can be the manager who needs to sign off on software purchases, the VP who decides how to allocate the budget on projects, the project manager who interacts with the key customer stakeholders.  In a scrum team, it is usually the product owner, who signs off on what work goes into the backlog and ranks priority.<br>It does no good if all the staff engineers agree on a direction, but neglect to get the buy in of their manager or product owner.]]></description><link>https://jamorrow.github.io/pages/software-soft-skills.html</link><guid isPermaLink="false">pages/Software Soft Skills.md</guid><dc:creator><![CDATA[Jennifer Morrow]]></dc:creator><pubDate>Wed, 23 Apr 2025 20:02:34 GMT</pubDate></item><item><title><![CDATA[Tech Lead Survival Guide]]></title><description><![CDATA[ 
 <br>The majority of problems facing software development teams are not technical but people problems.<br><a data-href="Software Soft Skills" href="https://jamorrow.github.io/pages/software-soft-skills.html" class="internal-link" target="_self" rel="noopener nofollow">Software Soft Skills</a><br>
<a data-href="Documentation" href="https://jamorrow.github.io/pages/documentation.html" class="internal-link" target="_self" rel="noopener nofollow">Documentation</a><br>TODO<br>
<a data-href="Prioritizing Tech Debt" href="https://jamorrow.github.io/1.-rough-notes/prioritizing-tech-debt.html" class="internal-link" target="_self" rel="noopener nofollow">Prioritizing Tech Debt</a><br>
<a data-href="Navigating Dysfunctional Organizations" href="https://jamorrow.github.io/1.-rough-notes/navigating-dysfunctional-organizations.html" class="internal-link" target="_self" rel="noopener nofollow">Navigating Dysfunctional Organizations</a><br>
<a data-href="On Programming Languages" href="https://jamorrow.github.io/5.-zettelkasten/on-programming-languages.html" class="internal-link" target="_self" rel="noopener nofollow">On Programming Languages</a>]]></description><link>https://jamorrow.github.io/pages/tech-lead-survival-guide.html</link><guid isPermaLink="false">pages/Tech Lead Survival Guide.md</guid><dc:creator><![CDATA[Jennifer Morrow]]></dc:creator><pubDate>Wed, 23 Apr 2025 20:13:10 GMT</pubDate></item><item><title><![CDATA[Welcome to Jennifer Morrow's tech blog.]]></title><description><![CDATA[ 
 <br><br><br>I am a software engineer who has been working in the field since 2015.  I enjoy working with people as well as technology.  This page is the result of my experiments with publishing Obsidian notes and generally messing around.<br><br><a data-href="Tech Lead Survival Guide" href="https://jamorrow.github.io/pages/tech-lead-survival-guide.html" class="internal-link" target="_self" rel="noopener nofollow">Tech Lead Survival Guide</a><br>
<a data-href="Software Soft Skills" href="https://jamorrow.github.io/pages/software-soft-skills.html" class="internal-link" target="_self" rel="noopener nofollow">Software Soft Skills</a><br>
<a data-href="Documentation" href="https://jamorrow.github.io/pages/documentation.html" class="internal-link" target="_self" rel="noopener nofollow">Documentation</a><br>
<a data-href="Generating This Site" href="https://jamorrow.github.io/pages/generating-this-site.html" class="internal-link" target="_self" rel="noopener nofollow">Generating This Site</a>]]></description><link>https://jamorrow.github.io/index.html</link><guid isPermaLink="false">index.md</guid><dc:creator><![CDATA[Jennifer Morrow]]></dc:creator><pubDate>Wed, 23 Apr 2025 22:48:08 GMT</pubDate></item></channel></rss>